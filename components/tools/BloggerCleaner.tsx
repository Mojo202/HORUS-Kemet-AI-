import React, { useState, useRef } from 'react';
import LoadingIndicator from '../LoadingIndicator';
import { fileToText } from '../../utils/file';

interface BloggerCleanerProps {
    onNavigateHome: () => void;
}

const BLOGGER_RESET_TEMPLATE = `<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html>
<html b:css='false' b:responsive='true' b:templateVersion='1.3.0' expr:dir='data:blog.languageDirection' xmlns='http://www.w3.org/1999/xhtml' xmlns:b='http://www.google.com/2005/gml/b' xmlns:data='http://www.google.com/2005/gml/data' xmlns:expr='http://www.google.com/2005/gml/expr'>
  <head>
    <meta charset='UTF-8' />
    <title><data:blog.pageTitle/></title>
    <b:skin><![CDATA[/* No CSS to declare */]]></b:skin>
  </head>
  <body>
    <b:section class='main' id='main' showaddelement='yes'>
      <b:widget id='Blog1' locked='true' title='Blog Posts' type='Blog' version='1'/>
    </b:section>
  </body>
</html>`;


const BloggerCleaner: React.FC<BloggerCleanerProps> = ({ onNavigateHome }) => {
    const [inputCode, setInputCode] = useState('');
    const [outputCode, setOutputCode] = useState('');
    const [isLoading, setIsLoading] = useState(false);
    const [copiedOutput, setCopiedOutput] = useState(false);

    const [resetTemplateCode, setResetTemplateCode] = useState('');
    const [copiedReset, setCopiedReset] = useState(false);
    const fileInputRef = useRef<HTMLInputElement>(null);
    const [isGuideOpen, setIsGuideOpen] = useState(true);


    const handleCleanCode = () => {
        setIsLoading(true);
        setOutputCode('');

        setTimeout(() => {
            let cleaned = inputCode.replace(/<!--[\s\S]*?-->/g, '');
            cleaned = cleaned.replace(/\n\s*\n/g, '\n');
            setOutputCode(cleaned.trim());
            setIsLoading(false);
        }, 500);
    };

    const handleCopy = (content: string, setCopiedState: React.Dispatch<React.SetStateAction<boolean>>) => {
        if (content) {
            navigator.clipboard.writeText(content);
            setCopiedState(true);
            setTimeout(() => setCopiedState(false), 2000);
        }
    };

    const handleDownload = (content: string, filename: string) => {
        if (!content) return;
        const blob = new Blob([content], { type: 'text/xml;charset=utf-8' });
        const url = URL.createObjectURL(blob);
        const link = document.createElement('a');
        link.href = url;
        link.download = filename;
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
        URL.revokeObjectURL(url);
    };

    const handlePaste = async () => {
        try {
            const text = await navigator.clipboard.readText();
            setInputCode(text);
        } catch (err) {
            alert("ูุดู ูู ูุฑุงุกุฉ ุงูุญุงูุธุฉ. ูุฑุฌู ุงูุชุฃูุฏ ูู ููุญ ุงูุฅุฐู ุงููุงุฒู ูููุชุตูุญ.");
        }
    };

    const handleClear = () => {
        setInputCode('');
        setOutputCode('');
    };

    const handleFileChange = async (event: React.ChangeEvent<HTMLInputElement>) => {
        if (event.target.files && event.target.files[0]) {
            try {
                const text = await fileToText(event.target.files[0]);
                setInputCode(text);
            } catch (error) {
                alert("ูุดู ูู ูุฑุงุกุฉ ุงูููู.");
            }
        }
        if (event.target) {
          event.target.value = "";
        }
    };
    
    const handleGenerateResetTemplate = () => {
        setResetTemplateCode(BLOGGER_RESET_TEMPLATE);
    };

    const GuideSection = () => (
        <div className="bg-gray-900/50 p-6 rounded-lg border border-cyan-500/30 text-gray-300 space-y-8">
            <h3 className="text-xl font-bold text-center text-cyan-400">ุงูุฏููู ุงูุดุงูู ููุฑูุฒ ุตูุงูุฉ ููุงูุจ ุจููุฌุฑ</h3>
            <p className="text-center text-gray-400">
                ูุฑุญุจุงู ุจู ูู ูุฑูุฒ ุงูุตูุงูุฉ ุงููุชูุฏู. ูุฐุง ุงูุฏููู ูุดุฑุญ ูู ุจุงูุชูุตูู ุงูุฃุฏูุงุช ุงููููุฉ ุงููุชุงุญุฉ ููุง ูููููุฉ ุงุณุชุฎุฏุงููุง ูุชุญููู ุฃูุถู ุฃุฏุงุก ููุฏููุงุชู.
            </p>

            {/* Section 1: Code Cleaner */}
            <div className="space-y-4">
                <h4 className="text-lg font-semibold text-purple-400 border-b-2 border-purple-500/30 pb-2">1. ุฃุฏุงุฉ ุชูุธูู ุงูููุฏ (ุฅุฒุงูุฉ ุงูุชุนูููุงุช ูุงููุณุงูุงุช)</h4>
                <p>ูุฐู ุงูุฃุฏุงุฉ ูู ุฎุทูุชู ุงูุฃููู ูุญู ูุงูุจ ุณุฑูุน ูุฎููู. ุชููู ุจุฅุฒุงูุฉ ูู ุงูุชุนูููุงุช ุงูุจุฑูุฌูุฉ (comments) ูุงูุฃุณุทุฑ ุงููุงุฑุบุฉ ุงูุฒุงุฆุฏุฉ ูู ููุฏ ุงููุงูุจุ ููุง ูููู ูู ุญุฌูู ููุญุณู ุณุฑุนุฉ ุชุญูููู.</p>
                
                <h5 className="font-semibold text-cyan-400">๐ ุฏููู ุงูุงุณุชุฎุฏุงู:</h5>
                <ol className="list-decimal list-inside space-y-2 pr-4">
                    <li><strong className="text-purple-300">ุฅุฏุฎุงู ุงูููุฏ:</strong> ุงูุตู ุงูููุฏ ูุจุงุดุฑุฉ ูู ุตูุฏูู "ููุฏ ุงููุงูุจ ุงูุฃุตูู"ุ ุฃู ุงุณุชุฎุฏู ุฒุฑ "ุฑูุน" ูุงุฎุชูุงุฑ ููู <code>.xml</code> ุฃู <code>.txt</code> ูู ุฌูุงุฒู.</li>
                    <li><strong className="text-purple-300">ุจุฏุก ุงูุชูุธูู:</strong> ุงุถุบุท ุนูู ุฒุฑ "โจ ุชูุธูู ุงูููุฏ ุงูุขู".</li>
                    <li><strong className="text-purple-300">ุงูุญุตูู ุนูู ุงููุชูุฌุฉ:</strong> ุณูุธูุฑ ุงูููุฏ ุงููุธูู ูู ุงูุตูุฏูู ุงูุณููู. ููููู ูุณุฎู ุฃู ุชุญูููู ูููู ุฌุงูุฒ ููุงุณุชุฎุฏุงู.</li>
                </ol>
            </div>

            {/* Section 2: Reset Template */}
            <div className="space-y-4">
                <h4 className="text-lg font-semibold text-purple-400 border-b-2 border-purple-500/30 pb-2">2. ููููุฏ ูุงูุจ ุฅุนุงุฏุฉ ุงูุชุนููู (ุงูุชูุธูู ุงูุนููู)</h4>
                <p>ูุฐู ูู ุงูุฃุฏุงุฉ ุงูุงุญุชุฑุงููุฉ ุงูุฃูู. ุนูุฏ ุชุบููุฑ ุงูููุงูุจ ูู ุจููุฌุฑุ ุบุงูุจูุง ูุง ุชุชุจูู ุฃููุงุฏ ูุฃุฏูุงุช (widgets) ูุฏููุฉ ูุฎููุฉุ ููุง ูุณุจุจ ูุดุงูู ูู ุงูุชูุงูู ููุจุทุฆ ุงููุงูุจ ุงูุฌุฏูุฏ. "ูุงูุจ ุฅุนุงุฏุฉ ุงูุชุนููู" ูู ูุงูุจ ูุงุฑุบ ุชูุงููุง ูููู ุจูุณุญ ูู ูุฐู ุงูุจูุงูุงุ ูุชุจุฏุฃ ูู ุตูุญุฉ ุจูุถุงุก ููุธููุฉ.</p>

                <div className="p-4 bg-yellow-900/30 border-l-4 border-yellow-400 text-yellow-200 space-y-2 rounded-r-lg">
                    <h5 className="font-bold flex items-center gap-2"><i className="fas fa-exclamation-triangle"></i> ููุทุฉ ูููุฉ ุฌุฏุงู!</h5>
                    <p className="text-sm">ุงุณุชุฎุฏุงู ูุฐุง ุงููุงูุจ ุณูุคุฏู ุฅูู ุญุฐู ุฌููุน ุงูุฃุฏูุงุช (Widgets) ูู ุงูุดุฑูุท ุงูุฌุงูุจู ูุงูููุชุฑ. ูู ูุชู ุญุฐู ูุดุงุฑูุงุชู ุฃู ุตูุญุงุชูุ ูููู ุณุชุญุชุงุฌ ุฅูู ุฅุนุงุฏุฉ ุฅุถุงูุฉ ุงูุฃุฏูุงุช ูุฏูููุง ุจุนุฏ ุชุซุจูุช ูุงูุจู ุงูุฌุฏูุฏ.</p>
                </div>
                
                <h5 className="font-semibold text-cyan-400">๐ ุฏููู ุงูุงุณุชุฎุฏุงู ุงูุขูู:</h5>
                <ol className="list-decimal list-inside space-y-2 pr-4">
                    <li><strong className="text-purple-300">ุฅูุดุงุก ุงููุงูุจ:</strong> ุงุถุบุท ุนูู ุฒุฑ "๐ ุฅูุดุงุก ูุงูุจ ุฅุนุงุฏุฉ ุงูุชุนููู".</li>
                    <li><strong className="text-purple-300">ูุณุฎ ุงูููุฏ:</strong> ุงูุณุฎ ุงูููุฏ ุงูุฐู ุณูุธูุฑ ุจุงููุงูู.</li>
                    <li><strong className="text-purple-300">ุงูุฐูุงุจ ุฅูู ุจููุฌุฑ:</strong> ุงูุชุญ ููุญุฉ ุชุญูู ูุฏููุชู โ ุงููุธูุฑ โ ุชุนุฏูู HTML.</li>
                    <li><strong className="text-purple-300">ุงูุชุทุจูู:</strong> ุญุฏุฏ ูู ุงูููุฏ ุงูููุฌูุฏ ูู ุงููุญุฑุฑ (Ctrl+A) ูุงุญุฐููุ ุซู ุงูุตู "ููุฏ ุฅุนุงุฏุฉ ุงูุชุนููู" ููุงูู.</li>
                    <li><strong className="text-purple-300">ุญูุธ ุงูุชุบููุฑุงุช:</strong> ุงุถุบุท ุนูู ุฃููููุฉ ุงูุญูุธ.</li>
                    <li><strong className="text-purple-300">ุงูุฎุทูุฉ ุงูููุงุฆูุฉ:</strong> ุงูุขูุ ุนุฏ ูุฑุฉ ุฃุฎุฑู ุฅูู "ุชุนุฏูู HTML"ุ ูุงุญุฐู ููุฏ ุฅุนุงุฏุฉ ุงูุชุนูููุ ุซู ุงูุตู ููุฏ ูุงูุจู ุงูุฌุฏูุฏ ูุงูุฃุณุงุณู. ุงุถุบุท ุนูู ุญูุธ.</li>
                </ol>
                <p className="mt-2 text-sm text-gray-400">ุจูุฐู ุงูุทุฑููุฉุ ุชุถูู ุฃู ูุงูุจู ุงูุฌุฏูุฏ ูุนูู ุนูู ุจูุฆุฉ ูุธููุฉ ุชูุงูุงู ุจุฏูู ุฃู ูุดุงูู ููุฑูุซุฉ.</p>
            </div>
        </div>
    );

    return (
        <>
            <button onClick={onNavigateHome} className="absolute top-24 left-4 sm:left-6 lg:left-8 px-4 py-2 text-sm font-semibold rounded-md bg-gray-600 text-white hover:bg-gray-700 transition-colors flex items-center gap-2 z-20">
                <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M10 19l-7-7m0 0l7-7m-7 7h18" /></svg>
                ุงูุนูุฏุฉ ููุฑุฆูุณูุฉ
            </button>
            
             <div className="flex flex-col items-center gap-4 text-center my-6">
                <div className="relative h-24 w-24 flex items-center justify-center">
                    <svg className="absolute h-full w-full text-cyan-500 dark:text-cyan-400 pulsing-triangle" viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg" strokeLinejoin="round" strokeWidth="3" stroke="currentColor" fill="none"><path d="M50 5 L95 85 L5 85 Z" /></svg>
                    <i className="fab fa-blogger-b relative text-6xl text-cyan-500 dark:text-cyan-400 eye-animation"></i>
                </div>
                <h2 className="font-extrabold text-2xl text-gray-800 dark:text-gray-100 tracking-wider" style={{ textShadow: '0 0 15px rgba(34, 211, 238, 0.6)' }}>
                    ูุฑูุฒ ุตูุงูุฉ ููุงูุจ ุจููุฌุฑ
                </h2>
            </div>
            
            <div className="w-full max-w-6xl mx-auto flex flex-col gap-8">
                 {/* Guide Section */}
                 <div className="bg-white/50 dark:bg-gray-800/50 rounded-lg border border-gray-200 dark:border-gray-700">
                    <button 
                        onClick={() => setIsGuideOpen(!isGuideOpen)}
                        className="w-full flex justify-between items-center p-4 text-left"
                        aria-expanded={isGuideOpen}
                    >
                        <h3 className="text-lg font-bold text-cyan-600 dark:text-cyan-400 flex items-center gap-3">
                            <i className="fas fa-book-open"></i>
                            ุงูุฏููู ุงูุดุงูู ูุงุณุชุฎุฏุงู ุฃุฏูุงุช ุงูุตูุงูุฉ
                        </h3>
                         <svg xmlns="http://www.w3.org/2000/svg" className={`h-6 w-6 text-gray-500 dark:text-gray-400 transform transition-transform duration-300 ${isGuideOpen ? 'rotate-180' : ''}`} fill="none" viewBox="0 0 24 24" stroke="currentColor"><path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 9l-7 7-7-7" /></svg>
                    </button>
                    {isGuideOpen && <GuideSection />}
                </div>

                {/* Tool 1: Code Cleaner */}
                <div className="bg-white/50 dark:bg-gray-800/50 p-6 rounded-lg border border-gray-200 dark:border-gray-700 flex flex-col gap-4">
                    <h3 className="text-xl font-bold text-center text-cyan-600 dark:text-cyan-400 mb-2">ุฃุฏุงุฉ ุชูุธูู ุงูููุฏ (ุฅุฒุงูุฉ ุงูุชุนูููุงุช ูุงููุณุงูุงุช)</h3>
                    
                    <div className="flex justify-between items-center">
                        <label htmlFor="input-code" className="font-semibold text-gray-800 dark:text-gray-200">1. ููุฏ ุงููุงูุจ ุงูุฃุตูู:</label>
                        <div className="flex gap-2">
                             <button onClick={handlePaste} title="ูุตู" className="px-3 py-1 text-xs rounded-md bg-gray-500 text-white hover:bg-gray-600"><i className="fas fa-paste"></i> ูุตู</button>
                             <button onClick={() => fileInputRef.current?.click()} title="ุฑูุน ููู" className="px-3 py-1 text-xs rounded-md bg-purple-600 text-white hover:bg-purple-700"><i className="fas fa-upload"></i> ุฑูุน</button>
                             <input type="file" ref={fileInputRef} onChange={handleFileChange} className="hidden" accept=".xml,.txt" />
                             <button onClick={handleClear} title="ูุณุญ" className="px-3 py-1 text-xs rounded-md bg-red-600 text-white hover:bg-red-700"><i className="fas fa-trash"></i> ูุณุญ</button>
                        </div>
                    </div>
                    <textarea
                        id="input-code"
                        value={inputCode}
                        onChange={(e) => setInputCode(e.target.value)}
                        placeholder="<!-- ุงูุตู ููุฏ ูุงูุจ ุจููุฌุฑ ุงููุงูู ููุง... -->"
                        className="w-full h-48 bg-gray-100 dark:bg-gray-900 border border-gray-300 dark:border-gray-600 rounded-md p-2 font-mono text-sm text-gray-800 dark:text-gray-200 resize-y"
                        dir="ltr"
                    />

                    <button
                        onClick={handleCleanCode}
                        disabled={isLoading || !inputCode}
                        className="w-full h-12 text-lg font-bold text-white bg-cyan-600 hover:bg-cyan-700 rounded-md shadow-lg flex items-center justify-center disabled:bg-purple-500/20 disabled:border disabled:border-purple-400/30 disabled:text-gray-400 disabled:cursor-not-allowed"
                    >
                        {isLoading ? <LoadingIndicator /> : 'โจ ุชูุธูู ุงูููุฏ ุงูุขู'}
                    </button>
                    
                    <div className="flex justify-between items-center">
                        <label htmlFor="output-code" className="font-semibold text-gray-800 dark:text-gray-200">2. ุงูููุฏ ุงููุธูู:</label>
                         <div className="flex gap-2">
                            <button onClick={() => handleCopy(outputCode, setCopiedOutput)} disabled={!outputCode} className="px-3 py-1 text-xs rounded-md bg-green-600 text-white hover:bg-green-700 disabled:bg-gray-500">
                                {copiedOutput ? 'โ ุชู ุงููุณุฎ' : 'ูุณุฎ'}
                            </button>
                            <button onClick={() => handleDownload(outputCode, 'cleaned-template.xml')} disabled={!outputCode} className="px-3 py-1 text-xs rounded-md bg-blue-600 text-white hover:bg-blue-700 disabled:bg-gray-500"><i className="fas fa-download"></i> ุชุญููู</button>
                         </div>
                    </div>
                     <textarea
                        id="output-code"
                        value={outputCode}
                        readOnly
                        placeholder="<!-- ุณูุธูุฑ ุงูููุฏ ุงููุธูู ููุง... -->"
                        className="w-full h-48 bg-gray-100 dark:bg-gray-900 border border-gray-300 dark:border-gray-600 rounded-md p-2 font-mono text-sm text-green-400 resize-y"
                        dir="ltr"
                    />
                </div>

                {/* Tool 2: Reset Template Generator */}
                <div className="bg-white/50 dark:bg-gray-800/50 p-6 rounded-lg border border-gray-200 dark:border-gray-700 flex flex-col gap-4">
                    <h3 className="text-xl font-bold text-center text-cyan-600 dark:text-cyan-400 mb-2">ููููุฏ ูุงูุจ ุฅุนุงุฏุฉ ุงูุชุนููู (ุงูุชูุธูู ุงูุนููู)</h3>
                    <p className="text-sm text-center text-gray-600 dark:text-gray-300 max-w-2xl mx-auto">
                        ุงุณุชุฎุฏู ูุฐุง ุงููุงูุจ ุงูุตุบูุฑ ูุฅุนุงุฏุฉ ุชุนููู ุฅุนุฏุงุฏุงุช ูุฏููุชู ูุฅุฒุงูุฉ ุฃู ุจูุงูุง ูู ุงูููุงูุจ ุงููุฏููุฉ ูุจู ุชุซุจูุช ูุงูุจ ุฌุฏูุฏ. ูู ุจุชุฑููุจูุ ุงุญูุธ ุงูุชุบููุฑุงุชุ ุซู ูู ุจุชุซุจูุช ูุงูุจู ุงูุฌุฏูุฏ ุนูู ูุธุงูุฉ.
                    </p>
                    <button
                        onClick={handleGenerateResetTemplate}
                        className="w-full max-w-xs mx-auto h-12 text-lg font-bold text-white bg-purple-600 hover:bg-purple-700 rounded-md shadow-lg flex items-center justify-center"
                    >
                        ๐ ุฅูุดุงุก ูุงูุจ ุฅุนุงุฏุฉ ุงูุชุนููู
                    </button>
                     {resetTemplateCode && (
                        <div className="flex flex-col gap-4 mt-4">
                             <div className="flex justify-between items-center">
                                <label htmlFor="reset-code" className="font-semibold text-gray-800 dark:text-gray-200">ููุฏ ูุงูุจ ุฅุนุงุฏุฉ ุงูุชุนููู:</label>
                                 <div className="flex gap-2">
                                    <button onClick={() => handleCopy(resetTemplateCode, setCopiedReset)} className="px-3 py-1 text-xs rounded-md bg-green-600 text-white hover:bg-green-700">
                                       {copiedReset ? 'โ ุชู ุงููุณุฎ' : 'ูุณุฎ'}
                                    </button>
                                    <button onClick={() => handleDownload(resetTemplateCode, 'reset-template.xml')} className="px-3 py-1 text-xs rounded-md bg-blue-600 text-white hover:bg-blue-700"><i className="fas fa-download"></i> ุชุญููู</button>
                                 </div>
                            </div>
                            <textarea
                                id="reset-code"
                                value={resetTemplateCode}
                                readOnly
                                className="w-full h-48 bg-gray-100 dark:bg-gray-900 border border-gray-300 dark:border-gray-600 rounded-md p-2 font-mono text-sm text-amber-400 resize-y"
                                dir="ltr"
                            />
                        </div>
                     )}
                </div>
            </div>
        </>
    );
};

export default BloggerCleaner;