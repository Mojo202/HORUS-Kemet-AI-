import React, { useState } from 'react';

interface SitemapGeneratorProps {
    onNavigateHome: () => void;
}

const GuideSection = () => (
    <div className="bg-gray-900/50 p-6 rounded-lg border border-cyan-500/30 text-gray-300 space-y-8" dangerouslySetInnerHTML={{ __html: `
        <h3 class="!text-2xl !font-bold text-center !text-cyan-400 !mb-6 !pb-2 !border-b-2 !border-cyan-500/30" style="text-shadow: 0 0 8px rgba(34, 211, 238, 0.5);">ููุณูุนุฉ ุฎุฑุงุฆุท ุงูููุงูุน: ุฏูููู ุงููุงูู ูุฃุฑุดูุฉ ุงุญุชุฑุงููุฉ</h3>
        
        <p>ุฅุฐุง ูุงู ููู robots.txt ูู ุญุงุฑุณ ุงูุจูุงุจุฉุ ูุฅู ุฎุฑูุทุฉ ุงููููุน (Sitemap) ูู ุฎุฑูุทุฉ ุงูููุฒ ุงูุชู ุชูุฏููุง ูุฌูุฌู. ุฅููุง ููู ูุฎุจุฑ ูุญุฑูุงุช ุงูุจุญุซ ุจูู ุตูุญุฉ ูุตูุฑุฉ ูููุฏูู ููู ูู ูููุนูุ ููุง ูุถูู ุงูุชุดุงููุง ูุฃุฑุดูุชูุง ุจุณุฑุนุฉ ูููุงุกุฉ.</p>

        <h4 class="!text-xl !font-semibold !text-purple-400 !flex !items-center !gap-3 !mt-8 !mb-4 !pb-2 !border-b !border-purple-500/20"><i class="fas fa-project-diagram text-2xl w-8 text-center"></i><span>ููุงุฐุง ุฎุฑุงุฆุท ุงููููุน ุญูููุฉ ููู SEOุ</span></h4>
        <ul class="!list-disc !marker:text-cyan-400 !pl-8 !mt-2 !space-y-2">
            <li><strong>ุงูุชุดุงู ุฃุณุฑุน:</strong> ุชุณุงุนุฏ ุฌูุฌู ุนูู ุงูุนุซูุฑ ุนูู ุตูุญุงุชู ุงูุฌุฏูุฏุฉ ูุงููุญุฏุซุฉ ุจุณุฑุนุฉ.</li>
            <li><strong>ููุฑุณุฉ ุฃูุถู:</strong> ุชุถูู ุฃู ุฌูุฌู ูุนุฑู ูู ุตูุญุงุช ูููุนูุ ุญุชู ุชูู ุงูุชู ูุฏ ูุตุนุจ ุงููุตูู ุฅูููุง ุนุจุฑ ุงูุฑูุงุจุท ุงูุนุงุฏูุฉ.</li>
            <li><strong>ูุญุชูู ุงููุณุงุฆุท:</strong> ุชุณูุญ ูู ุจุชูุฏูู ูุนูููุงุช ุฅุถุงููุฉ ุญูู ุงูุตูุฑ ูุงูููุฏูููุงุชุ ููุง ูุนุฒุฒ ุธููุฑูุง ูู ูุชุงุฆุฌ ุจุญุซ ุงูุตูุฑ ูุงูููุฏูู.</li>
            <li><strong>ููุงูุน ุงูุฃุฎุจุงุฑ:</strong> ุฎุฑุงุฆุท ุงูุฃุฎุจุงุฑ ุถุฑูุฑูุฉ ููุธููุฑ ูู ูุณู "ุฃุฎุจุงุฑ ุฌูุฌู" ุจุดูู ููุฑู ุชูุฑูุจูุง.</li>
        </ul>
        
        <h4 class="!text-xl !font-semibold !text-purple-400 !flex !items-center !gap-3 !mt-8 !mb-4 !pb-2 !border-b !border-purple-500/20"><i class="fas fa-layer-group text-2xl w-8 text-center"></i><span>ุฃููุงุน ุงูุฎุฑุงุฆุท ุงูุชู ููููู ุฅูุดุงุคูุง ููุง:</span></h4>
        <ol class="!list-none !p-0 !space-y-3">
            <li class="!py-2 !pl-4 !border-l-2 !border-cyan-500/30"><strong class="text-purple-300">ุฎุฑุงุฆุท ุงูุตูุญุงุช:</strong> ุงูุฎุฑูุทุฉ ุงูุฃุณุงุณูุฉ ููู ูููุนุ ุชุญุชูู ุนูู ุฑูุงุจุท ุงูููุงูุงุช ูุงูุตูุญุงุช.</li>
            <li class="!py-2 !pl-4 !border-l-2 !border-cyan-500/30"><strong class="text-purple-300">ุฎุฑุงุฆุท ุงูุตูุฑ:</strong> ูุฅุฎุจุงุฑ ุฌูุฌู ุจูู ุงูุตูุฑ ุงููููุฉ ูู ูููุนู ูุฃูู ุชูุฌุฏ.</li>
            <li class="!py-2 !pl-4 !border-l-2 !border-cyan-500/30"><strong class="text-purple-300">ุฎุฑุงุฆุท ุงูููุฏูู:</strong> ูุชูุฏูู ุชูุงุตูู ุนู ููุฏูููุงุชู ูุชุนุฒูุฒ ุฃุฑุดูุชูุง.</li>
            <li class="!py-2 !pl-4 !border-l-2 !border-cyan-500/30"><strong class="text-purple-300">ุฎุฑุงุฆุท ุงูุฃุฎุจุงุฑ:</strong> ุงูุฃูู ููููุงูุน ุงูุฅุฎุจุงุฑูุฉุ ูุฅุฑุณุงู ุงูุฃุฎุจุงุฑ ุงูุนุงุฌูุฉ ุฅูู ุฌูุฌู ุจุณุฑุนุฉ ูุงุฆูุฉ.</li>
        </ol>

        <h4 class="!text-xl !font-semibold !text-purple-400 !flex !items-center !gap-3 !mt-8 !mb-4 !pb-2 !border-b !border-purple-500/20"><i class="fas fa-cogs text-2xl w-8 text-center"></i><span>ุฏููู ุงูุงุณุชุฎุฏุงู ุฎุทูุฉ ุจุฎุทูุฉ:</span></h4>
        <ol class="!list-decimal list-inside space-y-2 pr-4">
            <li><strong class="text-cyan-300">ุงูุชููู ุจูู ุงูุฃูุณุงู:</strong> ุงุณุชุฎุฏู ุงูุฃูุณูุฉ ุงูุนูููุฉ (ุตูุญุงุชุ ุตูุฑุ ุฅูุฎ) ููุชููู ูุฅุถุงูุฉ ุงููุญุชูู ุงูููุงุณุจ ูู ูู ูุณู.</li>
            <li><strong class="text-cyan-300">ุฅุถุงูุฉ ุงูุฅุฏุฎุงูุงุช:</strong> ูู ูู ูุณูุ ุงุถุบุท ุนูู ุฒุฑ "ุฅุถุงูุฉ" ูุฅูุดุงุก ุตู ุฌุฏูุฏุ ุซู ุงููุฃ ุงูุญููู ุงููุทููุจุฉ ููู ุฑุงุจุท.</li>
            <li><strong class="text-cyan-300">ุฅูุดุงุก ุงูุฎุฑุงุฆุท:</strong> ุจุนุฏ ุฅุถุงูุฉ ุฌููุน ุฑูุงุจุทูุ ุงุถุบุท ุนูู ุฒุฑ "๐ ุฅูุดุงุก ุงูุฎุฑุงุฆุท ูููู Robots.txt".</li>
            <li><strong class="text-cyan-300">ุงูุญุตูู ุนูู ุงููุชุงุฆุฌ:</strong> ุณุชููู ุงูุฃุฏุงุฉ ุจุฅูุดุงุก ูููุงุช XML ุงููุงุฒูุฉ (ูุฏ ุชูุดุฆ ููู ููุฑุณ ุฑุฆูุณู ููููุงุช ูุฑุนูุฉ ุฅุฐุง ูุงู ูุฏูู ุฃููุงุน ูุญุชูู ูุชุนุฏุฏุฉุ ููุฐู ูู ุฃูุถู ููุงุฑุณุฉ).</li>
            <li><strong class="text-cyan-300">ุงูุฑูุน ูุงูุชุทุจูู:</strong> ูู ุจุชุญููู ูููุงุช ุงูุฎุฑุงุฆุท (sitemap.xml, images-sitemap.xml, ุฅูุฎ) ุฅูู ุงููุฌูุฏ ุงูุฑุฆูุณู ููููุนู. ุซู ูู ุจุชุญููู ููู robots.txt.</li>
             <li><strong class="text-cyan-300">ุงูุฎุทูุฉ ุงูุฃุฎูุฑุฉ:</strong> ุงุฐูุจ ุฅูู Google Search Consoleุ ุซู ูุณู Sitemapsุ ูุฃุถู ุฑุงุจุท ููู ุงูุฎุฑูุทุฉ ุงูุฑุฆูุณู (ุนุงุฏุฉู ูููู <code>https://yourdomain.com/sitemap.xml</code>).</li>
        </ol>
    `}} />
);

// Type definitions for sitemap entries
type PageEntry = { id: number; loc: string; lastmod: string; changefreq: string; priority: string; };
type ImageEntry = { id: number; pageLoc: string; imageLoc: string; caption: string; };
type VideoEntry = { id: number; pageLoc: string; videoLoc: string; thumbLoc: string; title: string; description: string; };
type NewsEntry = { id: number; loc: string; pubName: string; pubDate: string; title: string; };


const SitemapGenerator: React.FC<SitemapGeneratorProps> = ({ onNavigateHome }) => {
    const [isGuideOpen, setIsGuideOpen] = useState(true);
    const [activeTab, setActiveTab] = useState<'pages' | 'images' | 'videos' | 'news'>('pages');

    const [pages, setPages] = useState<PageEntry[]>([]);
    const [images, setImages] = useState<ImageEntry[]>([]);
    const [videos, setVideos] = useState<VideoEntry[]>([]);
    const [news, setNews] = useState<NewsEntry[]>([]);
    
    const [siteUrl, setSiteUrl] = useState('');
    const [generatedFiles, setGeneratedFiles] = useState<{ name: string; content: string }[]>([]);

    const handleAdd = (type: 'pages' | 'images' | 'videos' | 'news') => {
        const today = new Date().toISOString().split('T')[0];
        switch (type) {
            case 'pages': setPages(p => [...p, { id: Date.now(), loc: '', lastmod: today, changefreq: 'weekly', priority: '0.8' }]); break;
            case 'images': setImages(i => [...i, { id: Date.now(), pageLoc: '', imageLoc: '', caption: '' }]); break;
            case 'videos': setVideos(v => [...v, { id: Date.now(), pageLoc: '', videoLoc: '', thumbLoc: '', title: '', description: '' }]); break;
            case 'news': setNews(n => [...n, { id: Date.now(), loc: '', pubName: 'ุงุณู ุงููููุน', pubDate: today, title: '' }]); break;
        }
    };

    const handleRemove = (type: 'pages' | 'images' | 'videos' | 'news', id: number) => {
        switch (type) {
            case 'pages': setPages(p => p.filter(i => i.id !== id)); break;
            case 'images': setImages(i => i.filter(item => item.id !== id)); break;
            case 'videos': setVideos(v => v.filter(item => item.id !== id)); break;
            case 'news': setNews(n => n.filter(item => item.id !== id)); break;
        }
    };
    
    const handleGenerate = () => {
        const files: { name: string; content: string }[] = [];
        const sitemapIndexEntries: string[] = [];
        const today = new Date().toISOString();
        const sitemapBaseUrl = siteUrl.endsWith('/') ? siteUrl : `${siteUrl}/`;

        if (pages.length > 0) {
            const content = `<?xml version="1.0" encoding="UTF-8"?>
<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">
${pages.map(p => `  <url>
    <loc>${p.loc}</loc>
    <lastmod>${p.lastmod}</lastmod>
    <changefreq>${p.changefreq}</changefreq>
    <priority>${p.priority}</priority>
  </url>`).join('\n')}
</urlset>`;
            files.push({ name: 'pages-sitemap.xml', content });
            sitemapIndexEntries.push(`  <sitemap>
    <loc>${sitemapBaseUrl}pages-sitemap.xml</loc>
    <lastmod>${today}</lastmod>
  </sitemap>`);
        }
        
        // ... (Similar blocks for images, videos, news)
        if (images.length > 0) {
             const content = `<?xml version="1.0" encoding="UTF-8"?>
<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9" xmlns:image="http://www.google.com/schemas/sitemap-image/1.1">
${images.map(i => `  <url>
    <loc>${i.pageLoc}</loc>
    <image:image>
      <image:loc>${i.imageLoc}</image:loc>
      <image:caption>${i.caption}</image:caption>
    </image:image>
  </url>`).join('\n')}
</urlset>`;
            files.push({ name: 'images-sitemap.xml', content });
            sitemapIndexEntries.push(`  <sitemap>
    <loc>${sitemapBaseUrl}images-sitemap.xml</loc>
    <lastmod>${today}</lastmod>
  </sitemap>`);
        }

        if (videos.length > 0) {
            const content = `<?xml version="1.0" encoding="UTF-8"?>
<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9" xmlns:video="http://www.google.com/schemas/sitemap-video/1.1">
${videos.map(v => `  <url>
    <loc>${v.pageLoc}</loc>
    <video:video>
      <video:thumbnail_loc>${v.thumbLoc}</video:thumbnail_loc>
      <video:title>${v.title}</video:title>
      <video:description>${v.description}</video:description>
      <video:content_loc>${v.videoLoc}</video:content_loc>
    </video:video>
  </url>`).join('\n')}
</urlset>`;
            files.push({ name: 'videos-sitemap.xml', content });
            sitemapIndexEntries.push(`  <sitemap>
    <loc>${sitemapBaseUrl}videos-sitemap.xml</loc>
    <lastmod>${today}</lastmod>
  </sitemap>`);
        }

        if (news.length > 0) {
            const content = `<?xml version="1.0" encoding="UTF-8"?>
<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9" xmlns:news="http://www.google.com/schemas/sitemap-news/0.9">
${news.map(n => `  <url>
    <loc>${n.loc}</loc>
    <news:news>
      <news:publication>
        <news:name>${n.pubName}</news:name>
        <news:language>ar</news:language>
      </news:publication>
      <news:publication_date>${n.pubDate}</news:publication_date>
      <news:title>${n.title}</news:title>
    </news:news>
  </url>`).join('\n')}
</urlset>`;
            files.push({ name: 'news-sitemap.xml', content });
            sitemapIndexEntries.push(`  <sitemap>
    <loc>${sitemapBaseUrl}news-sitemap.xml</loc>
    <lastmod>${today}</lastmod>
  </sitemap>`);
        }
        
        // Generate Sitemap Index or a single sitemap
        if (sitemapIndexEntries.length > 1) {
            const indexContent = `<?xml version="1.0" encoding="UTF-8"?>
<sitemapindex xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">
${sitemapIndexEntries.join('\n')}
</sitemapindex>`;
            files.unshift({ name: 'sitemap.xml', content: indexContent });
        } else if (files.length === 1) {
            files[0].name = 'sitemap.xml';
        }

        // Generate robots.txt
        const robotsContent = `User-agent: *\nAllow: /\n\nSitemap: ${sitemapBaseUrl}sitemap.xml`;
        files.push({ name: 'robots.txt', content: robotsContent });

        setGeneratedFiles(files);
    };

    const handleDownload = (name: string, content: string) => {
        const blob = new Blob([content], { type: 'application/xml;charset=utf-8' });
        const url = URL.createObjectURL(blob);
        const link = document.createElement('a');
        link.href = url;
        link.download = name;
        link.click();
        URL.revokeObjectURL(url);
    };
    
    return (
         <>
            <button onClick={onNavigateHome} className="absolute top-24 left-4 sm:left-6 lg:left-8 px-4 py-2 text-sm font-semibold rounded-md bg-gray-600 text-white hover:bg-gray-700 transition-colors flex items-center gap-2 z-20">
                <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path d="M10 19l-7-7m0 0l7-7m-7 7h18" /></svg>
                ุงูุนูุฏุฉ ููุฑุฆูุณูุฉ
            </button>
            <div className="flex flex-col items-center gap-4 text-center my-6">
                <div className="relative h-24 w-24 flex items-center justify-center">
                    <svg className="absolute h-full w-full text-cyan-500 dark:text-cyan-400 pulsing-triangle" viewBox="0 0 100 100" stroke="currentColor" fill="none"><path d="M50 5 L95 85 L5 85 Z" /></svg>
                    <i className="fas fa-sitemap relative text-6xl text-cyan-500 dark:text-cyan-400 eye-animation"></i>
                </div>
                <h2 className="font-extrabold text-2xl text-gray-800 dark:text-gray-100 tracking-wider" style={{ textShadow: '0 0 15px rgba(34, 211, 238, 0.6)' }}>
                    ููููุฏ ุฎุฑุงุฆุท ุงููููุน ุงูุดุงูู
                </h2>
            </div>
            
            <div className="w-full max-w-7xl mx-auto flex flex-col gap-6">
                <div className="bg-white/50 dark:bg-gray-800/50 rounded-lg border border-gray-200 dark:border-gray-700">
                    <button onClick={() => setIsGuideOpen(!isGuideOpen)} className="w-full flex justify-between items-center p-4 text-left" aria-expanded={isGuideOpen}>
                        <h3 className="text-lg font-bold text-cyan-600 dark:text-cyan-400 flex items-center gap-3"><i className="fas fa-book-open"></i>ุงูุฏููู ุงูุดุงูู ููุงุณุชุฎุฏุงู</h3>
                        <svg xmlns="http://www.w3.org/2000/svg" className={`h-6 w-6 text-gray-500 dark:text-gray-400 transform transition-transform duration-300 ${isGuideOpen ? 'rotate-180' : ''}`} fill="none" viewBox="0 0 24 24" stroke="currentColor"><path d="M19 9l-7 7-7-7" /></svg>
                    </button>
                    {isGuideOpen && <GuideSection />}
                </div>

                <div className="bg-gray-800/50 p-6 rounded-lg border border-gray-700 space-y-6">
                    <div>
                        <label className="block text-md font-medium text-gray-300 mb-2">ุฑุงุจุท ูููุนู ุงูุฑุฆูุณู (Homepage URL)</label>
                        <input type="url" value={siteUrl} onChange={e => setSiteUrl(e.target.value)} placeholder="https://example.com" className="w-full bg-gray-900 border border-gray-600 rounded-md p-3 text-gray-200 text-center font-mono" dir="ltr"/>
                    </div>
                    {/* Tabs */}
                    <div className="border-b border-gray-600 flex">
                        {[{key: 'pages', icon: 'fa-file', label: 'ุงูุตูุญุงุช'}, {key: 'images', icon: 'fa-image', label: 'ุงูุตูุฑ'}, {key: 'videos', icon: 'fa-video', label: 'ุงูููุฏูู'}, {key: 'news', icon: 'fa-newspaper', label: 'ุงูุฃุฎุจุงุฑ'}].map(tab => (
                            <button key={tab.key} onClick={() => setActiveTab(tab.key as any)} className={`px-4 py-2 text-sm font-semibold -mb-px border-b-2 flex items-center gap-2 ${activeTab === tab.key ? 'border-cyan-500 text-cyan-400' : 'border-transparent text-gray-400 hover:text-cyan-400'}`}>
                                <i className={`fas ${tab.icon}`}></i> {tab.label}
                            </button>
                        ))}
                    </div>
                    {/* Tab Content */}
                    <div className="space-y-4">
                        {activeTab === 'pages' && pages.map(p => <div key={p.id} className="grid grid-cols-4 gap-2 items-center">
                            <input value={p.loc} onChange={e => setPages(ps => ps.map(i => i.id === p.id ? {...i, loc: e.target.value} : i))} placeholder="ุฑุงุจุท ุงูุตูุญุฉ" className="col-span-2 bg-gray-900 p-2 rounded border border-gray-600"/>
                            <select value={p.changefreq} onChange={e => setPages(ps => ps.map(i => i.id === p.id ? {...i, changefreq: e.target.value} : i))} className="bg-gray-900 p-2 rounded border border-gray-600"><option>daily</option><option>weekly</option><option>monthly</option></select>
                            <button onClick={() => handleRemove('pages', p.id)} className="text-red-500">ุญุฐู</button>
                        </div>)}
                        {/* More entry types here... */}
                         <button onClick={() => handleAdd(activeTab)} className="w-full p-2 rounded-md bg-purple-600 text-white hover:bg-purple-700">ุฅุถุงูุฉ {activeTab === 'pages' ? 'ุตูุญุฉ' : 'ุนูุตุฑ'}</button>
                    </div>

                     <button onClick={handleGenerate} className="w-full h-12 text-lg font-bold text-white bg-green-600 hover:bg-green-700 rounded-md shadow-lg">๐ ุฅูุดุงุก ุงูุฎุฑุงุฆุท ูููู Robots.txt</button>
                    
                     {generatedFiles.length > 0 && <div className="space-y-4 pt-4 border-t border-gray-600">
                        <h3 className="text-xl font-bold text-center text-green-400">ุงููููุงุช ุงูุฌุงูุฒุฉ</h3>
                        {generatedFiles.map(file => <div key={file.name} className="bg-gray-900 p-4 rounded-lg">
                            <div className="flex justify-between items-center mb-2">
                                <h4 className="font-semibold text-purple-300 font-mono">{file.name}</h4>
                                <button onClick={() => handleDownload(file.name, file.content)} className="px-3 py-1 text-xs rounded bg-blue-600 text-white">ุชุญููู</button>
                            </div>
                            <textarea value={file.content} readOnly className="w-full h-40 bg-black/50 border border-gray-700 rounded p-2 font-mono text-sm text-cyan-300" dir="ltr"/>
                        </div>)}
                    </div>}
                </div>
            </div>
        </>
    );
};

export default SitemapGenerator;